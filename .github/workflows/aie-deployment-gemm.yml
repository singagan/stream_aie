name: AIE Deployment Gemm

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  run-snakemake:
    runs-on: [self-hosted, linux]
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache Python virtualenv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          # restore-keys: |
          #   venv-${{ runner.os }}-

      - name: Set up Python environment and install requirements
        run: |
          if [ ! -d ".venv" ]; then
            python3 -m venv .venv
          fi
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          bash setup_mlir_aie_requirements.sh

      - name: Run DSE+Codegen+Deployment for Gemm
        run: |
          source .venv/bin/activate
          source setup_mlir_aie_path.sh
          source setup_mlir_aie_pythonpath.sh
          snakemake -j 1 --forceall --keep-going

      - name: Report GEMM shape results
        if: always()
        run: |
          found_any=0
          for status_file in outputs/*/status.ok; do
            found_any=1
            dir=$(basename $(dirname "$status_file"))
            # Extract fields using pattern
            if [[ "$dir" =~ ^(.+)-gemm_([0-9]+)_([0-9]+)_([0-9]+)-fused-constraint-optimization$ ]]; then
              hwid="${BASH_REMATCH[1]}"
              M="${BASH_REMATCH[2]}"
              K="${BASH_REMATCH[3]}"
              N="${BASH_REMATCH[4]}"
              if grep -q success "$status_file"; then
                echo "✅ GEMM [$hwid] M=$M K=$K N=$N"
              else
                echo "❌ GEMM [$hwid] M=$M K=$K N=$N (status file exists but not marked successful)"
              fi
            else
              echo "❌ Unrecognized output directory format: $dir"
            fi
          done

          if [[ "$found_any" -eq 0 ]]; then
            echo "❌ No status.ok files found."
            exit 1
          fi

      - name: Upload output artifact
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: outputs/*
          retention-days: 30

